<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.focus.easymail.dao.CustomerBusinessTypeDao">

    <resultMap type="com.focus.easymail.entity.CustomerBusinessType" id="CustomerBusinessTypeMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="businessName" column="business_name" jdbcType="VARCHAR"/>
        <result property="otherName" column="other_name" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CustomerBusinessTypeMap">
        select id,
               business_name,
               other_name,
               remark
        from mail.customer_business_type
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CustomerBusinessTypeMap">
        select id,
               business_name,
               other_name,
               remark
        from mail.customer_business_type limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="CustomerBusinessTypeMap">
        select
        id, business_name, other_name, remark
        from mail.customer_business_type
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="businessName != null and businessName != ''">
                and business_name = #{businessName}
            </if>
            <if test="otherName != null and otherName != ''">
                and other_name = #{otherName}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into mail.customer_business_type(business_name, other_name, remark)
        values (#{businessName}, #{otherName}, #{remark})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into mail.customer_business_type(business_name, other_name, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.businessName}, #{entity.otherName}, #{entity.remark})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into mail.customer_business_type(business_name, other_name, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.businessName}, #{entity.otherName}, #{entity.remark})
        </foreach>
        on duplicate key update
        business_name = values(business_name) , other_name = values(other_name) , remark = values(remark)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update mail.customer_business_type
        <set>
            <if test="businessName != null and businessName != ''">
                business_name = #{businessName},
            </if>
            <if test="otherName != null and otherName != ''">
                other_name = #{otherName},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from mail.customer_business_type
        where id = #{id}
    </delete>

</mapper>

